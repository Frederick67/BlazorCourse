@page "/books/delete/{id:int}"
@inject IBookService bookService
@inject NavigationManager NavigationManager

<h3>Delete</h3>

<h4>Are you sure you want to delete this book?</h4>

<EditForm Model="book">
<div class="form-group">
    <label for="Title">Title</label>
    <InputText class="form-control" id="Title" @bind-Value="book.Title" disabled />
</div>
<div class="form-group">
    <label for="Summary">Summary</label>
    <InputTextArea class="form-control" id="Summary" @bind-Value="book.Summary" disabled />
</div>
<div class="form-group">
    <label for="Price">Price</label>
    <InputNumber class="form-control" id="Price" @bind-Value="book.Price" disabled />
</div>
<div class="form-group">
    <label for="Author">Author</label>
    <InputText class="form-control" id="Author" @bind-Value="book.AuthorName" disabled />
</div>
<div class="form-group">
    <label for="Year">Year</label>
    <InputNumber class="form-control" id="Year" @bind-Value="book.Year" disabled />
</div>
<div class="form-group">
    <label for="ISBN">ISBN</label>
    <InputText class="form-control" id="ISBN" @bind-Value="book.Isbn" disabled />
</div>
<div class="form-group">
    <label for="Image">Image</label>
    <InputTextArea class="form-control" id="Image" @bind-Value="book.Image" disabled />
</div>
</EditForm>

<button class="btn btn-danger" @onclick="DeleteBook">Delete</button>
<button class="btn btn-primary" @onclick="backToList">Cancel</button>



@code {

private BookReadOnlyDto book = new BookReadOnlyDto();
    [Parameter]
    public int id { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var response = await bookService.GetBook(id);
        if (response.Success)
        {
            book = response.Data;
        }
    }
    private async Task DeleteBook()
    {
        var response = await bookService.DeleteBook(id);
        if (response.Success)
        {
            NavigationManager.NavigateTo("/books");
        }
    }
    private void backToList()
    {
        NavigationManager.NavigateTo("/books");
    }

}
