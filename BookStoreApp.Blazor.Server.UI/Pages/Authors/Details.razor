@page "/authors/details/{id:int}"
@inject IAuthorService authorService
@inject NavigationManager NavigationManager


<h3>Details</h3>
@if(Author == null)
{
    <div>
        <p>Loading...</p>
    </div>
}
else
{
    <EditForm Model="Author">
        <div class="form-group">
            <label for="FirstName">First Name</label>
            <InputText class="form-control" id="FirstName" @bind-Value="Author.FirstName" disabled />
        </div>
        <div class="form-group">
            <label for="LastName">Last Name</label>
            <InputText class="form-control" id="LastName" @bind-Value="Author.LastName" disabled />
        </div>
        <div class="form-group">
            <label for="Bio">Bio</label>
            <InputTextArea class="form-control" id="Bio" @bind-Value="Author.Bio" disabled />
        </div>

    </EditForm>


    if(Author.Books == null)
    {
        <div>

            <p>No books</p>

        </div>
    }
    else
    {
        <h3>Books</h3>
        <table class="table table-responsive">
            <thead>

                <tr>
                    <th>Title</th>
                    <th>Price</th>
                    <th>Actions</th>
                </tr>

            </thead>

            <tbody>
                @foreach (var book in Author.Books)
                {
                    <tr>
                        <td>@book.Title</td>
                        <td>@book.Price</td>
                        <td>
                            <button class="btn btn-primary">Edit</button>
                            <button class="btn btn-danger">Delete</button>
                        </td>
                    </tr>
                }

            </tbody>

        </table>
    }

}
<button class="btn btn-primary" @onclick="addBook">Add Book</button>
<button class="btn btn-primary" @onclick="edit">Edit</button>
<button class="btn btn-primary" @onclick="backToList">Back</button>



 @code {

    private AuthorDetailsDto Author { get; set; } = new AuthorDetailsDto();
    [Parameter]
    public int id { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var response = await authorService.GetAuthorDetails(id);
        if (response.Success)
        {
            Author = response.Data;
        }

        Console.WriteLine(Author.Books.Count);
        foreach (var book in Author.Books)
        {
            Console.WriteLine(book.Title);
        }

    }

    private void addBook()
    {
        NavigationManager.NavigateTo($"/books/create/{id}");
    }

    private void edit()
    {
        NavigationManager.NavigateTo($"/authors/update/{id}");
    }

    private void backToList()
    {
        NavigationManager.NavigateTo("/authors");
    }



}
