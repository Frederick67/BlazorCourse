@page "/books/create/{id:int}"
@inject IBookService bookService
@inject IAuthorService authorService
@inject NavigationManager NavigationManager



<h3>Create new book</h3>
<EditForm Model="Book" OnValidSubmit="HandleCreate">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="Title">Title</label>
        <InputText class="form-control" id="Title" @bind-Value="Book.Title" />
    </div>
    <div class="form-group">
        <label for="Title">Year</label>
        <InputNumber class="form-control" id="Title" @bind-Value="Book.Year" />
    </div>
    <div class="form-group">
        <label for="Title">ISBN</label>
        <InputText class="form-control" id="Title" @bind-Value="Book.Isbn" />
    </div>
    <div class="form-group">
        <label for="Price">Summary</label>
        <InputTextArea class="form-control" id="Price" @bind-Value="Book.Summary" />
    </div>
    <div class="form-group">
        <label for="Price">Price</label>
        <InputNumber class="form-control" id="Price" @bind-Value="Book.Price" />
    </div>
    <div class="form-group">
        <label for="Description">Image</label>
        <InputTextArea class="form-control" id="Image" @bind-Value="Book.Image" />
    </div>
    <button class="btn btn-primary" type="submit">Create</button>
</EditForm>
<button class="btn btn-primary" @onclick="backToList">Back</button>


@code {

    private BookCreateDto Book { get; set; } = new BookCreateDto();
    private AuthorRealyOnlyDto Author { get; set; } = new AuthorRealyOnlyDto();
    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await authorService.GetAuthor(id);
        if (response.Success)
        {
            Author = response.Data;
        }
    }

    
    private async Task HandleCreate()
    {
        Book.AuthorId = id;
        var response2 = await bookService.CreateBook(Book);
        if (response2.Success)
            {
                backToList();
            }
    }


    private void backToList()
    {
        NavigationManager.NavigateTo("/authors/details/" + id);
    }

}
